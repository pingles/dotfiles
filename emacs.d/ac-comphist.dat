((("deftype" .
   [1 0 0 0 0 0 0])
  ("discounts" .
   [1 0 0 0 0 0 0 0 0])
  ("Bill." .
   [0 0 0 0 1])
  ("apricot-soup" .
   [0 0 0 0 0 0 0 1 0 0 0 0])
  ("tails" .
   [5 0 0 0 0])
  ("lazy-seq" .
   [0 0 0 0 0 1 0 2])
  ("mid" .
   [1 0 0])
  ("split-at" .
   [0 0 0 0 0 0 0 1])
  ("parts" .
   [1 0 0 0 0])
  ("int" .
   [1 0 0])
  ("poco" .
   [1 0 0 0])
  (":use" .
   [1 0 0 0])
  ("project" .
   [2 0 0 0 0 0 0])
  ("initial-value" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("next-c" .
   [1 0 0 0 0 0])
  ("alloc-server" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  (":available" .
   [0 0 0 0 0 0 0 0 1 0])
  (":free" .
   [1 0 0 0 0])
  ("send-cast!" .
   [0 0 0 0 0 0 0 0 1 0])
  (":alloc" .
   [1 0 0 0 0 0])
  ("channels-manager" .
   [0 0 0 0 0 1 0 0 0 3 3 0 0 0 0 0])
  ("send-call!" .
   [0 0 0 0 0 1 0 1 0 0])
  ("start-evented" .
   [1 0 0 0 0 0 0 0 0 1 0 0 0])
  ("jobim.examples.server" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("start" .
   [1 0 0 0 0])
  ("interface" .
   [1 0 0 0 0 0 0 0 0])
  ("jobim.utils" .
   [0 0 0 0 0 0 0 0 0 1 0])
  ("alloc" .
   [3 0 0 0 0])
  ("stat" .
   [1 0 0 0])
  ("status" .
   [1 0 0 0 0 0])
  ("handle-info" .
   [0 0 0 0 0 0 0 0 0 1 0])
  ("change" .
   [0 0 0 0 1 0])
  ("repl" .
   [1 0 0 0])
  ("noreply" .
   [0 0 0 0 1 2 0])
  ("handle-cast" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("Handles" .
   [0 0 0 0 0 0 1])
  ("rest-channels" .
   [0 0 0 0 0 0 0 2 0 0 0 0 0])
  ("reply" .
   [2 0 0 0 0])
  ("channels" .
   [9 0 0 0 0 5 4 2])
  ("topic" .
   [1 0 0 0 0])
  ("request" .
   [9 0 0 0 0 0 0])
  ("handle-call" .
   [0 0 0 0 0 0 0 0 1 0 0])
  (":server-call" .
   [0 0 0 0 0 0 0 0 0 0 1 0])
  ("init" .
   [2 0 0 0])
  ("def-server" .
   [0 0 0 0 0 1 0 0 0 0])
  ("matchure" .
   [1 0 0 0 0 0 0 0])
  ("jobim.behaviours.server" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("jobim" .
   [1 0 0 0 0])
  ("tokengame.actors" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("run-petri-net" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0])
  ("bootstrap-node" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("process-command" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0])
  ("transient" .
   [0 0 0 0 0 0 1 0 0])
  (":ignore" .
   [1 0 0 0 0 0 0])
  ("after" .
   [1 0 0 0 0])
  ("pid-to-mbox" .
   [0 0 0 0 0 0 0 0 1 0 0])
  ("*mbox*" .
   [1 0 0 0 0 0])
  ("mbox" .
   [1 0 0 0])
  ("pid" .
   [10 0 0])
  ("*pid*" .
   [1 0 0 0 0])
  (".getStackTrace" .
   [0 0 0 0 0 0 0 1 1 0 0 0 0 0])
  (".getMessage" .
   [0 0 0 0 0 0 1 0 1 0 0])
  (":ok" .
   [2 0 0])
  ("ping-benchmarking-evented" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("resolve-node-name" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0])
  ("self" .
   [13 0 0 0])
  ("1000" .
   [1 0 0 0])
  ("rand" .
   [1 0 0 0])
  ("Math/floor" .
   [0 0 0 0 0 0 0 0 1 0])
  ("Thread/sleep" .
   [0 0 0 0 0 0 0 0 0 0 0 1])
  ("data" .
   [9 0 0 0])
  ("from" .
   [25 0 0 0])
  ("react" .
   [2 0 0 0 0])
  ("react-loop" .
   [0 0 0 0 0 0 1 0 0 0])
  ("nth" .
   [5 0 0])
  ("send!" .
   [14 0 0 0 0])
  ("remote-pid" .
   [2 0 0 0 0 0 0 0 0 0])
  ("rpc-blocking-call" .
   [0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0])
  ("blocking" .
   [0 0 0 0 0 0 0 1])
  ("time" .
   [2 0 0 0])
  ("spawn-in-repl" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("in" .
   [1 0])
  ("spawn" .
   [2 0 0 0 0])
  ("sink" .
   [3 0 0 0])
  ("jobim.examples.actors" .
   [0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 1])
  ("receiv" .
   [0 0 0 0 0 1])
  ("receive" .
   [4 0 0 0 2 2 0])
  ("cond-match" .
   [0 0 0 0 0 0 1 3 0 0])
  ("jobim.core" .
   [1 0 0 0 0 0 0 0 0 0])
  ("jobim.test.core" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("java.util.concurrent" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("not=" .
   [2 0 0 0])
  ("remove-channel" .
   [0 0 0 0 0 0 0 0 0 1 1 0 0 0])
  ("read-json" .
   [0 0 0 0 0 0 1 1 0])
  ("ex" .
   [7 0])
  ("Exception" .
   [2 0 0 0 0 0 0 0 1])
  ("catch" .
   [1 0 0 0 0])
  ("to" .
   [11 0])
  ("remote-log" .
   [3 0 0 0 0 0 0 0 0 4])
  ("Consumer" .
   [0 0 0 0 0 0 0 1])
  ("iteration-result" .
   [1 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0])
  ("try-bind" .
   [1 0 0 0 0 0 0 0])
  ("ack" .
   [3 0 0])
  ("ack-tokens" .
   [1 0 0 0 0 0 0 0 0 0])
  ("cancel-consumer" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("chn" .
   [2 0 0])
  (".basicCancel" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("rabbit" .
   [1 0 0 0 0 0])
  ("ack-message" .
   [1 0 0 0 0 0 1 0 0 0 0])
  ("next-token" .
   [0 0 0 0 0 0 1 2 0 0])
  ("try-consume" .
   [0 0 0 0 0 0 0 0 1 0 0])
  ("next-place" .
   [2 0 0 0 0 1 3 0 1 0])
  ("next-consumer" .
   [0 0 0 0 0 0 1 0 1 0 0 0 0])
  ("blocking-consumer" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0])
  (".poll" .
   [2 0 0 0 0])
  ("blocking-token" .
   [1 0 0 0 0 1 0 0 0 0 0 2 0 0])
  ("blocking-place" .
   [0 0 0 1 1 6 0 0 0 0 0 0 1 0])
  ("remaining-places" .
   [2 0 0 0 0 0 0 0 0 0 1 2 0 0 0 0])
  ("make-consumer-queue-object" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("consumer-tag" .
   [8 0 0 0 0 2 0 0 0 0 1 0])
  ("reject-message" .
   [1 0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("long" .
   [1 0 0 0])
  (".basicReject" .
   [0 0 0 0 0 0 0 0 1 0 0 0])
  ("msg" .
   [48 0 0])
  ("find-place-in-places" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0])
  ("bound-tokens" .
   [0 0 0 0 0 0 0 0 4 0 0 0])
  ("place-name" .
   [7 0 0 0 0 0 0 0 0 0])
  ("delivery-tag" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("reject-tokens" .
   [2 0 0 0 1 0 0 0 0 0 0 0 0])
  (":bound" .
   [1 0 0 0 0 0])
  ("bind-result" .
   [2 0 0 0 0 0 0 0 0 0 0])
  ("new-bound" .
   [2 0 0 0 0 0 0 0 0])
  (".take" .
   [2 0 0 0 0])
  ("orig-size" .
   [0 0 0 0 0 0 0 1 0])
  ("val-source" .
   [3 0 0 0 0 0 0 0 0 0])
  ("Consumer:" .
   [0 0 0 0 0 0 0 0 1])
  ("vals" .
   [0 0 0 1])
  ("deftransition" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("defplace" .
   [4 0 0 0 0 0 0 0])
  ("netflow.petri" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("use" .
   [3 0 0])
  ("place-exchange-id" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("publish" .
   [1 0 0 0 0 0 0])
  ("when" .
   [6 0 0 0])
  ("read-string" .
   [0 0 0 0 0 0 1 0 0 0 0])
  ("places" .
   [13 0 0 0 0 0])
  ("sourcep" .
   [1 0 0 0 0 0 0])
  ("source" .
   [5 0 0 0 1 0])
  ("dec" .
   [1 0 0])
  ("to-return" .
   [0 0 0 0 0 1 0 1 1])
  ("to-read" .
   [0 0 0 0 0 2 0])
  ("remaining" .
   [1 0 0 0 2 2 0 0 0])
  ("to-retrieve" .
   [0 0 0 0 0 0 0 2 0 0 0])
  (":size" .
   [4 0 0 0 0])
  ("fire" .
   [2 0 0 0])
  ("places-in-map" .
   [2 0 0 0 0 0 0 0 1 5 0 5 0])
  ("consumer" .
   [5 0 0 0 0 0 1 1])
  ("consume" .
   [2 0 0 0 0 0 0])
  ("item" .
   [1 0 0 0])
  (":queue-id" .
   [0 0 0 0 0 0 0 1 0])
  (":queues" .
   [0 0 0 0 0 0 1])
  ("queue" .
   [3 0 0 0 0])
  ("queue-id" .
   [0 0 0 2 2 1 2 0])
  ("make-consumer-queue" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("bound" .
   [3 0 0 0 0])
  (":function" .
   [1 0 0 0 0 0 0 0 0])
  ("function" .
   [1 0 0 0 0 0 0 0])
  ("to-bind" .
   [0 0 0 0 2 2 0])
  ("loop" .
   [10 0 0 0])
  ("connect-place-out" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":places-out" .
   [1 0 0 0 1 0 0 0 0 0 0])
  (":places-in" .
   [0 0 0 0 0 1 0 0 0 0])
  (":transition" .
   [0 0 0 0 0 0 1 0 0 0 0])
  ("places-out" .
   [6 0 0 1 0 0 0 0 0 0])
  ("places-in" .
   [18 0 1 3 0 0 0 1 1])
  ("place-queue-id" .
   [0 0 0 0 0 0 0 1 1 1 0 0 0 0])
  (":only" .
   [1 0 0 0 0])
  ("clojure.contrib.logging" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0])
  ("clojure.contrib.string" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  ("make-queue" .
   [1 0 0 0 0 0 0 0 0 0])
  ("place-exchane-id" .
   [0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0])
  ("place-channel-id" .
   [3 0 0 0 0 3 3 2 5 1 1 0 0 0 0 0])
  ("place-channel" .
   [4 0 0 0 0 0 0 1 0 0 0 0 2])
  ("channel" .
   [1 0 0 0 0 1 0])
  (":name" .
   [13 0 0 0 0])
  ("place" .
   [45 0 0 0 0])
  ("*rabbit-server*" .
   [0 0 0 1 10 0 0 0 0 0 0 1 0 0 0])
  ("make-channel" .
   [0 0 0 0 0 0 0 0 0 0 1 0])
  (":info" .
   [12 0 0 0 0])
  (":place" .
   [3 0 0 0 0 0])
  ("run" .
   [6 0 0])
  ("defmethod" .
   [3 0 0 0 0 0 0 0 0])
  ("component" .
   [9 0 0 1 3 12 1 0 1])
  (":model-component" .
   [1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("defmulti" .
   [1 0 0 0 0 0 0 0])
  ("20%" .
   [1 0 0])
  ("margin-left" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("lightGray" .
   [0 0 0 0 0 1 1 0 0])
  ("center" .
   [2 0 0 0 0 0])
  ("text-align" .
   [0 0 0 0 0 0 1 1 0 0])
  ("fixed" .
   [1 0 0 0 0])
  (":b" .
   [1 0])
  (":github" .
   [1 0 0 0 0 0 0])
  ("pixels" .
   [0 0 0 1 0 0])
  ("forward" .
   [0 0 0 0 1 0 0])
  ("180" .
   [3 0 0])
  ("right" .
   [0 0 1 0 0])
  ("debugger" .
   [2 0 0 0 0 0 0 0])
  ("200" .
   [1 0 0])
  ("turtle" .
   [1 0 1 0 0 0])
  ("angle" .
   [2 0 0 0 1])
  ("20px" .
   [2 0 0 0])
  ("10px" .
   [2 0 0 0])
  ("left" .
   [3 0 1 0])
  ("auto" .
   [4 0 0 0])
  ("variables" .
   [0 0 0 1 0 0 0 0 0])
  ("LOGO" .
   [7 0 0 0])
  (":test-session" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("empty-word" .
   [1 0 0 0 0 0 0 0 1 0])
  ("logo-word" .
   [1 0 0 0 0 0 0 1 0])
  ("newline" .
   [1 0 0 0 0 0 0])
  ("arg" .
   [3 0 0])
  ("digit" .
   [1 0 0 0 0])
  ("number" .
   [4 0 0 0 0 0])
  ("sequential" .
   [0 0 0 0 1 1 3 0 0 0])
  ("logo-list-item" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("character" .
   [2 0 0 0 0 0 0 0 0])
  ("logo-list" .
   [1 0 0 0 0 0 0 0 0])
  ("arguments" .
   [1 0 0 0 0 0 0 0 0])
  ("new-line" .
   [0 0 0 0 0 0 1 0])
  ("token-separator" .
   [0 0 0 3 0 0 0 0 1 0 0 1 0 0 0])
  ("fn-call" .
   [1 0 0 0 0 0 0])
  (":args" .
   [1 0 0 0 0])
  ("args" .
   [16 0 0 0])
  ("sentences" .
   [1 0 0 0 0 1 0 0 0])
  ("many-1" .
   [1 0 0 0 0 0])
  ("empty" .
   [2 0 0 0 0])
  ("parsed" .
   [3 0 0 0 0 0])
  ("re-matches" .
   [1 0 0 0 0 0 0 0 0 0])
  ("pattern" .
   [3 0 0 0 0 0 0])
  ("matches" .
   [1 0 0 0 0 0 0])
  ("space" .
   [2 0 0 0 0])
  ("blank" .
   [2 0 0 0 0])
  ("or" .
   [6 0])
  ("cons" .
   [2 0 0 0])
  (":content" .
   [1 0 0 0 0 0 0 0])
  ("result-conj" .
   [1 0 0 0 0 0 0 0 0 0 0])
  (":word" .
   [1 0 0 0 0])
  ("meta" .
   [1 0 0 0])
  ("maybe" .
   [3 0 0 0 0])
  ("reverse" .
   [2 0 0 0 0 0 0])
  ("result-concat" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0])
  ("flatten" .
   [1 0 0 0 0 0 0])
  ("col" .
   [8 0 0])
  ("vec" .
   [10 0 0])
  ("print" .
   [2 0 0 0 0])
  ("count" .
   [23 0 0 0 0])
  ("parsing-failure?" .
   [0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0])
  ("failure" .
   [1 0 0 1 0 1 0])
  ("success" .
   [7 0 0 1 3 0 0])
  ("parsing-result" .
   [1 0 0 0 1 1 0 0 0 0 0 2 0 0])
  ("parsing-success?" .
   [0 0 0 5 1 1 1 1 0 0 0 0 0 0 0 0])
  (":result" .
   [2 0 0 0 0 0 0])
  ("false" .
   [7 0 0 0 0])
  ("true" .
   [6 0 0 0])
  (":success" .
   [2 0 0 0 0 0 0 0])
  ("word" .
   [12 0 0 0])
  ("letter" .
   [4 0 0 0 0 0])
  ("Character/isLetter" .
   [0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 0 0 0])
  ("Character/isDigit" .
   [0 0 0 0 1 2 1 0 0 0 0 0 0 0 0 0 0])
  ("char" .
   [1 0 0 0])
  ("combinator" .
   [1 0 0 0 0 0 0 0 0 0])
  ("token" .
   [11 0 0 0 0])
  ("token-content" .
   [2 0 0 0 0 0 0 0 1 0 0 0 0])
  ("token-type" .
   [0 0 0 0 0 0 0 0 0 1])
  ("return" .
   [9 0 0 0 0 0])
  ("Returns" .
   [0 0 0 0 0 0 2])
  (":parser-tag" .
   [1 0 0 0 0 0 1 0 1 0 0])
  ("many" .
   [14 0 0 0])
  ("run-many" .
   [1 0 0 0 0 0 0 0])
  ("defn-" .
   [3 0 0 0 0])
  ("recur" .
   [19 0 0 0 0])
  ("of" .
   [1 0])
  ("parser-tag" .
   [6 0 0 0 0 0 0 0 1 0])
  ("tag" .
   [7 0 0])
  ("orig-input" .
   [1 0 0 1 1 1 0 0 0 0])
  ("rest-bindings" .
   [0 0 0 0 0 1 0 1 0 0 0 0 0])
  ("log" .
   [30 0 0])
  ("binding-def" .
   [0 0 0 1 0 0 0 0 0 1 0])
  ("bindings-part" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0])
  (":error" .
   [34 0 0 0 0 0])
  ("second" .
   [6 0 0 0 1 0])
  ("output-binding" .
   [0 0 0 0 0 0 0 1 0 1 0 0 0 0])
  ("oa" .
   [3 0])
  ("result" .
   [40 0 0 0 0 0])
  ("binding" .
   [1 0 0 0 2 2 0])
  ("let-bind-inner" .
   [0 0 0 0 0 0 0 0 0 1 1 0 0 0])
  ("let-bind" .
   [2 0 0 0 0 0 5 0])
  ("output" .
   [5 0 1 3 4 0])
  ("rest" .
   [12 0 0 0])
  ("input" .
   [12 0 0 0 0])
  ("empty?" .
   [15 0 0 0 0 0])
  ("body" .
   [5 0 1 0])
  ("bindings" .
   [6 0 0 0 1 0 0 0])
  ("defmacro" .
   [2 0 0 0 0 0 0 0])
  ("def" .
   [8 0 0])
  ("letter-or-num" .
   [1 0 0 0 0 0 1 0 0 1 0 0 0])
  ("nil" .
   [21 0 0])
  ("pb" .
   [2 0])
  ("pa" .
   [3 0])
  ("satisfy" .
   [1 0 1 0 4 1 0])
  ("bf" .
   [3 0])
  ("parser" .
   [16 0 0 0 0 1])
  ("either" .
   [7 0 0 1 0 0])
  ("deftest" .
   [1 0 0 0 0 0 0])
  ("not" .
   [5 0 0])
  ("is-letter" .
   [1 0 0 0 0 2 0 0 0])
  ("nil?" .
   [16 0 0 0])
  ("is" .
   [4 0])
  (":kind" .
   [1 0 0 0 0])
  ("condp" .
   [14 0 0 0 0])
  ("String" .
   [0 0 0 1 0 0])
  ("instance?" .
   [0 0 0 1 0 0 0 0 0])
  ("toolkit" .
   [0 0 0 0 1 0 0])
  ("dict-trs" .
   [0 0 0 0 0 0 1 0])
  ("conj" .
   [16 0 0 0])
  ("it-list" .
   [0 0 0 0 0 1 0])
  ("ac-list" .
   [0 0 0 0 0 1 0])
  ("concat" .
   [6 0 0 0 0 0])
  ("it-dict" .
   [0 0 0 0 0 1 0])
  ("ac-dicts" .
   [0 0 0 0 1 0 0 0])
  ("merge" .
   [1 0 0 0 0])
  ("ac" .
   [4 0])
  ("find-urls" .
   [0 0 0 0 0 0 2 0 0])
  ("let" .
   [51 0 0])
  ("coll?" .
   [1 0 0 2 2])
  ("keys" .
   [6 0 0 0])
  ("uris-dict" .
   [0 0 0 1 0 1 1 0 0])
  ("get" .
   [9 0 0])
  ("next-token-counter" .
   [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("%2" .
   [3 0])
  ("assoc" .
   [16 0 0 0 0])
  ("reduce" .
   [7 0 0 0 0 0])
  ("uris" .
   [2 0 0 0])
  ("*url-re*" .
   [0 0 0 0 0 0 0 1])
  ("re-seq" .
   [0 0 0 0 0 1])
  ("first" .
   [37 0 0 1 0])
  ("string?" .
   [1 0 0 1 0 0 0])
  ("if" .
   [38 0])
  ("inc" .
   [6 0 0])
  ("*url-counter*" .
   [0 0 0 1 2 0 0 0 0 0 0 0 0])
  ("deref" .
   [1 0 0 0 0])
  ("current" .
   [2 0 2 1 1 0 1])
  ("dosync" .
   [2 0 0 0 0 0])
  ("ref" .
   [4 0 0])
  ("alter" .
   [7 0 0 0 0])
  ("atom" .
   [8 0 0 0])
  ("current-doc" .
   [1 0 1 0 0 0 0 0 6 2 0])
  ("defn" .
   [91 0 0 0])
  ("pmap" .
   [1 0 0 0])
  ("do" .
   [37 0])
  ("fn" .
   [32 0])
  ("throw" .
   [2 0 0 0 1])
  ("doseq" .
   [14 0 0 0 1])
  ("threads" .
   [2 0 0 0 0 0 0])
  ("map" .
   [7 0 0])
  ("%1" .
   [30 0])
  ("str" .
   [89 0 0])
  ("println" .
   [33 0 0 0 0 0 0])
  ("lang" .
   [8 0 0 1])
  ("def-get-sentences" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  ("*models-dir*" .
   [0 0 0 4 0 0 0 0 0 0 0 0])
  ("def-tokenize" .
   [0 0 0 0 0 0 0 1 0 0 0 0])
  ("def-pos-tagger" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("def-chunker" .
   [0 0 0 0 0 0 1 0 0 0 0])
  ("name" .
   [3 0 0 0])
  ("40px" .
   [2 0 0 0])
  ("position" .
   [1 0 0 0 0 0 0 0])
  ("absolute" .
   [0 0 0 2 0 0 0 0])
  ("ns" .
   [7 0])
  ("euler.prob" .
   [0 0 0 0 0 0 1 0 0 0])
  ("future" .
   [1 0 0 0 0 0])
  ("apply" .
   [7 0 0 0 0])
  ("primes" .
   [12 0 0 0 0 0])
  ("and" .
   [3 0 0])
  ("mod" .
   [3 0 0])
  ("10" .
   [1 0])
  ("divisible" .
   [0 0 0 0 2 1 0 0 0])
  ("num-to-list" .
   [0 0 0 0 0 1 0 0 0 0 0])
  ("test-3" .
   [0 0 0 0 1 0])
  ("Math/sqrt" .
   [0 0 0 0 0 0 0 4 0])
  ("ps" .
   [4 0])
  ("max" .
   [3 0 0])
  ("Math/pow" .
   [0 0 1 0 1 0 0 1])
  ("sqrtn" .
   [1 0 3 0 0])
  ("trial-division" .
   [0 0 0 2 0 0 0 0 0 0 0 0 0 0])
  ("2000000" .
   [1 0 0 0 0 0 0])
  ("filter" .
   [3 0 0 0 0 0])
  ("div" .
   [1 0 0])
  ("rem" .
   [2 0 0])
  ("acum" .
   [21 0 0 0])
  ("val" .
   [5 0 0])
  ("try" .
   [3 0 0])
  ("state" .
   [52 0 0 0 0])
  ("add" .
   [1 0 0])
  ("tokens" .
   [27 0 0 0 0 0])
  ("commiting-tokens" .
   [0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0])
  ("do-add-token" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  (":normal" .
   [14 0 0 0 0 0 0])
  ("version" .
   [7 0 0 0 0 0 0])
  ("do-init-commit" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0 0])
  (":commited" .
   [0 0 0 0 0 0 1 0 0])
  (":commiting" .
   [0 0 0 0 0 0 0 1 2 0])
  ("send" .
   [1 0 0 0])
  (":rollback" .
   [4 0 0 0 0 0 1 1 1])
  ("protocol-rollback-msg" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0])
  (":value" .
   [2 0 0 0 0 0])
  (":topic" .
   [9 0 0 0 0 0])
  (":place-id" .
   [2 0 0 0 0 0 0 0 0])
  ("id" .
   [9 0])
  ("protocol-rollback-place" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0])
  (":id" .
   [16 0 0])
  ("swap!" .
   [1 0 0 1 3])
  (":from" .
   [4 0 0 0 0])
  ("protocol" .
   [2 0 0 0 0 0 0 2])
  ("protocol-commit-place" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0])
  ("committed-places" .
   [0 0 0 0 0 0 0 0 3 2 0 0 1 0 0 0])
  ("request-binding" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("place-in" .
   [9 0 0 0 0 0 0 1])
  ("resolve-name" .
   [1 0 0 0 0 0 0 0 0 0 4 0])
  (":version" .
   [1 0 0 0 0 0 0 0])
  (":count" .
   [5 0 0 0 0 0])
  (":pid" .
   [4 0 0 0])
  ("protocol-commit" .
   [2 0 0 0 0 0 0 0 0 0 0 0 1 0 0])
  (":data" .
   [1 0 0 0 0])
  (":tokens" .
   [1 0 0 0 0 0 0])
  ("place-" .
   [2 0 0 0 0 0])
  (":token-add" .
   [0 0 0 0 0 0 0 0 1 0])
  (":commit" .
   [2 0 0 0 0 0 0])
  ("committed" .
   [7 0 0 0 0 0 0 0 0])
  (":commit-ok" .
   [1 0 0 0 0 0 0 0 0 0])
  (":state" .
   [1 0 0 0 0 0])
  (":committed" .
   [1 0 0 0 0 0 0 0 3 0])
  (":token-update" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("out-places" .
   [2 0 0 0 0 0 0 0 0 0])
  ("places-in-state" .
   [7 0 0 0 0 0 0 0 0 0 0 3 3 0 0])
  ("to-commit" .
   [8 0 0 0 0 0 0 2 0])
  ("handle-commit" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("handle-rollback" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("handle-rollback-place" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":token" .
   [3 0 0 0 0 0])
  ("append-token" .
   [1 0 0 0 0 0 0 0 0 0 0 1])
  ("tks" .
   [1 0 0])
  ("transitions" .
   [12 0 0 0 0 0 0 0 0 0 0])
  ("place-actor" .
   [0 0 0 0 0 0 0 0 1 0 0])
  ("out-transitions-for-place" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("model" .
   [1 0 0 0 0])
  ("protocol-update-place-count" .
   [0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("protocol-token-update" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 0 0 0])
  ("Exception." .
   [1 0 0 0 0 0 0 0 0 0])
  ("send-all-transitions" .
   [1 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 0 0])
  ("transition" .
   [14 0 0 0 0 0 0 0 0 2])
  ("transition-name" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("handle-normal-commit" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":committing" .
   [1 0 0 0 0 0 0 0 0 3 0])
  ("handle-committing-commit" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("update-state" .
   [2 0 0 0 0 0 0 0 3 2 0 0])
  ("new-state" .
   [1 0 0 0 0 0 0 0 0])
  ("swap-atoms" .
   [1 0 0 0 0 0 0 0 0 0])
  ("set" .
   [1 0 0])
  ("at" .
   [1 0])
  ("set-atom" .
   [0 0 0 0 2 1 2 0])
  (":num-tokens" .
   [1 0 0 0 1 0 0 3 0 0 0])
  ("length" .
   [1 0 0 0 0 0])
  ("protocol-rollback-from-place" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0])
  ("move-n-tokens" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("num" .
   [3 0 0])
  ("take" .
   [1 0 0 0])
  ("old" .
   [4 0 0])
  ("drop" .
   [1 0 0 0])
  ("taken" .
   [1 0 0 0 0])
  ("protocol-committed" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("protocol-rollback-" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("protocol-token-add" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("add-to-front" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("cont" .
   [1 0 0 0])
  ("update-places-in-map" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("place-id" .
   [4 0 0 0 0 0 0 0])
  ("num-tokens" .
   [2 0 0 0 0 0 0 1 0 0])
  ("table" .
   [1 0 0 0 0])
  ("fire-ready?" .
   [0 0 0 0 0 0 0 0 1 0 0])
  (":commit-init" .
   [2 0 0 0 0 0 0 0 0 0 0 0])
  ("create" .
   [2 0 0 0 0 0])
  ("create-to-commit" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  (":none" .
   [2 0 0 0 0])
  ("send-all-places-in" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0])
  ("places-in-state-map" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0])
  ("handle-commit-init-token-update" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("update-places-in-state" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0])
  ("handle-rollback-transition" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("protocol-rollback-from-transition" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("update-places-in-ma" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("apply-transition-fn" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("all" .
   [1 0 0])
  ("all-committed" .
   [1 0 0 0 0 0 0 0 0 0 0 0 1])
  ("all-committed>" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("all-committed?" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("some" .
   [1 0 0 0])
  (":to" .
   [1 0 0])
  ("defprotocol" .
   [0 0 0 0 0 0 1 0 2 0 0])
  ("this" .
   [15 0 0 0])
  ("init-data" .
   [1 0 0 0 0 0 0 0 0])
  ("num-processors" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("path" .
   [3 0 0 0])
  ("delete" .
   [2 0 0 0 0 0])
  ("commit" .
   [1 0 0 0 0 0])
  ("connect" .
   [1 0 0 0 0 0 0])
  ("implementation" .
   [5 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("handle-event" .
   [0 0 0 0 0 0 0 0 0 1 1 0])
  ("evt" .
   [2 0 0])
  ("do-event-handler-handle-event" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":event" .
   [1 0 0 0 0 0])
  (":terminate" .
   [1 0 0 0 0 0 0 0 0 0])
  ("terminate" .
   [1 0 0 0 0 1 0 0 0])
  ("event-handler-actor" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("initial-state-p" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 2])
  ("inst" .
   [4 0 0 0])
  ("handler" .
   [2 0 0 0 0 0 0])
  ("prot-handlers" .
   [0 0 0 0 0 0 0 1 1 0 0 0 1])
  ("class" .
   [2 0 0 0 0])
  ("handler-id" .
   [1 0 0 0 0 0 0 0 0 1])
  ("handlers" .
   [1 0 0 0 0 0 0 1])
  ("prot-handlers-p" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 2])
  (":handlers" .
   [4 0 0 0 0 0 0 0 0])
  ("handlers-p" .
   [1 0 0 0 0 0 0 0 0 1])
  ("comp" .
   [2 0 0 0])
  ("event" .
   [3 0 0 0 0])
  ("start-event-manager" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("def-event-handler" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0])
  ("message" .
   [3 0 0 0 0 0 0])
  ("add-handler" .
   [0 0 0 0 0 0 1 0 0 0 0])
  ("ConsoleLogger" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("notify" .
   [1 0 0 0 0 0])
  ("jobim.behaviours." .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("jobim.behaviours.events" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  (":not-evented" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("prot" .
   [1 0 0 0])
  (":notify" .
   [1 0 0 0 0 0 0])
  ("list" .
   [4 0 0 0])
  ("tails2" .
   [2 0 0 0 0 0])
  ("scount" .
   [0 0 0 0 2 0])
  ("partial" .
   [3 0 0 0 0 0 0])
  ("for" .
   [1 0 0])
  ("puts" .
   [7 0 0 0])
  ("STDIN" .
   [1 0 0 0 0])
  ("readline" .
   [1 0 0 0 0 0 0 0])
  ("chomp" .
   [1 0 0 0 0])
  ("response_2" .
   [1 0 0 0 0 0 0 0 0 0])
  ("else" .
   [2 0 0 0])
  ("response_3" .
   [1 0 0 0 0 0 0 0 0 0])
  ("response_4" .
   [1 0 0 0 0 0 0 0 0 0])
  ("ask_user" .
   [4 0 0 0 0 0 0 0])
  ("create-bill" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("dual-fuel-bill" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1 0])
  (":variant" .
   [2 0 0 0 0 0 0 0])
  ("plan" .
   [4 0 0 0])
  ("bill" .
   [3 0 0 0])
  ("economy-7-plan-charges" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0])
  ("plan-charges" .
   [3 0 0 0 1 0 0 1 0 0 0 0])
  ("charges" .
   [3 0 0 0 0 0 0])
  ("charges-fn" .
   [4 0 0 0 0 0 0 0 0 0])
  ("electricity-plan" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0])
  ("profile" .
   [4 0 0 0 0 0 0])
  ("Electricity" .
   [0 0 0 0 0 0 0 0 0 0 1])
  ("electricity_plan" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":usage" .
   [1 0 0 0 0 0])
  ("electricity-usage" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])))
